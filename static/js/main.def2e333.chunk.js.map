{"version":3,"sources":["components/TimelineControl.jsx","components/Grid.jsx","components/Point.jsx","components/TimelineLi.jsx","App.js","serviceWorker.js","index.js"],"names":["TimelineControl","timeline","activeIndex","onActiveIndexChange","type","onChange","value","min","max","length","list","id","map","i","key","label","Grid","width","height","children","style","maxWidth","maxHeight","Point","x","y","top","left","title","TimelineLi","isActive","onRemove","onClick","className","App","useState","setTimeline","setActiveIndex","replaySpeed","setReplaySpeed","replayIndex","undefined","replayInterval","replayState","setReplayState","onAddAction","target","removeAction","index","slice","htmlFor","start","reversed","bind","action","reverse","Math","parseInt","step","setInterval","clearInterval","actions","reduce","Error","derivePosition","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.def2e333.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./TimelineControl.css\";\n\nexport function TimelineControl({\n  timeline = [],\n  activeIndex = 0,\n  onActiveIndexChange = () => {},\n}) {\n  return (\n    <Fragment>\n      <input\n        type=\"range\"\n        onChange={onActiveIndexChange}\n        value={activeIndex}\n        min={0}\n        max={timeline.length}\n        list=\"timeline-increments\"\n      />\n      <datalist id=\"timeline-increments\">\n        {timeline.map((value, i) => (\n          <option key={i} value={i} label={value} />\n        ))}\n      </datalist>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./Grid.css\";\n\nexport function Grid({ width = 10, height = 10, children = null }) {\n  const style = {\n    width: `${width}em`,\n    height: `${height}em`,\n    maxWidth: `${width}em`,\n    maxHeight: `${height}em`,\n  };\n  return <output style={style}>{children}</output>;\n}\n","import React from \"react\";\nimport \"./Point.css\";\n\nexport function Point({ x = 0, y = 0 }) {\n  const style = {\n    top: `${y}em`,\n    left: `${x}em`,\n  };\n\n  return <figure style={style} title={`${x},${y}`} />;\n}\n","import React from \"react\";\nimport \"./TimelineLi.css\";\n\nexport function TimelineLi({\n  isActive = false,\n  onRemove = null,\n  onClick = () => {},\n  value = null,\n}) {\n  return (\n    <li className={isActive ? \"active\" : null}>\n      <div>\n        <input type=\"button\" onClick={onClick} value={value} />\n        {onRemove && (\n          <input type=\"button\" onClick={onRemove} value={\"x\"} title=\"remove\" />\n        )}\n      </div>\n    </li>\n  );\n}\n","import React, { useState } from \"react\";\nimport { TimelineControl } from \"./components/TimelineControl\";\nimport { Grid } from \"./components/Grid\";\nimport { Point } from \"./components/Point\";\nimport { TimelineLi } from \"./components/TimelineLi\";\n\nfunction derivePosition({ x = 0, y = 0 }, actions = []) {\n  return actions.reduce(\n    ({ x, y }, action) => {\n      switch (action) {\n        case \"up\":\n          return { x, y: y - 1 };\n        case \"right\":\n          return { x: x + 1, y };\n        case \"down\":\n          return { x, y: y + 1 };\n        case \"left\":\n          return { x: x - 1, y };\n        default:\n          throw new Error(`Unhandled action type: ${action}.`);\n      }\n    },\n    { x, y }\n  );\n}\n\nfunction App() {\n  const actions = [\"up\", \"right\", \"down\", \"left\"];\n\n  const [timeline, setTimeline] = useState([\n    \"right\",\n    \"down\",\n    \"down\",\n    \"right\",\n    \"down\",\n    \"left\",\n    \"up\",\n  ]);\n  const [activeIndex, setActiveIndex] = useState(2);\n  const [replaySpeed, setReplaySpeed] = useState(200);\n  const [replayState, setReplayState] = useState({\n    replayIndex: undefined,\n    replayInterval: undefined,\n  });\n\n  function onActiveIndexChange({ target: { value } }) {\n    setActiveIndex(Math.min(timeline.length, parseInt(value, 10)));\n  }\n\n  function onAddAction({ target: { value } }) {\n    setTimeline([...timeline, value]);\n    setActiveIndex(timeline.length + 1);\n  }\n\n  function removeAction(index) {\n    setTimeline([...timeline.slice(0, index), ...timeline.slice(index + 1)]);\n    if (activeIndex > index) setActiveIndex(activeIndex - 1);\n  }\n\n  function onReplaySpeedChange({ target: { value } }) {\n    setReplaySpeed(parseInt(value, 10));\n  }\n\n  function onReplay() {\n    if (replayState.replayInterval) return;\n    setReplayState({\n      replayIndex: 0,\n      replayInterval: setInterval(() => {\n        setReplayState(({ replayIndex, replayInterval }) => {\n          if (replayIndex > activeIndex) {\n            clearInterval(replayInterval);\n            return {\n              replayIndex: undefined,\n              replayInterval: undefined,\n            };\n          }\n\n          setActiveIndex(replayIndex);\n          return {\n            replayInterval,\n            replayIndex: replayIndex + 1,\n          };\n        });\n      }, replaySpeed),\n    });\n  }\n\n  return (\n    <main>\n      <aside>\n        <label htmlFor=\"timeline\">Timeline</label>\n        <ol id=\"timeline\" start={timeline.length} reversed={true}>\n          <TimelineLi\n            isActive={activeIndex >= timeline.length}\n            onClick={setActiveIndex.bind(null, timeline.length)}\n            value=\"&hellip;\"\n          />\n          {timeline\n            .map((action, i) => (\n              <TimelineLi\n                key={i}\n                isActive={i === activeIndex}\n                onRemove={removeAction.bind(null, i)}\n                onClick={setActiveIndex.bind(null, i)}\n                value={action}\n              />\n            ))\n            .reverse()}\n        </ol>\n      </aside>\n      <article>\n        <section>\n          <fieldset>\n            <legend>Timeline (Active Index: {activeIndex})</legend>\n            <TimelineControl\n              timeline={timeline}\n              activeIndex={activeIndex}\n              onActiveIndexChange={onActiveIndexChange}\n            />\n          </fieldset>\n        </section>\n        <section>\n          <fieldset>\n            <legend>Replay Controls</legend>\n            <label htmlFor=\"replay-speed\">Replay Speed (ms):</label>\n            <input\n              id=\"replay-speed\"\n              type=\"number\"\n              min={1}\n              step={1}\n              value={replaySpeed}\n              onChange={onReplaySpeedChange}\n            />\n            <input type=\"button\" onClick={onReplay} value=\"Replay\" />\n          </fieldset>\n          <fieldset>\n            <legend>Action Controls</legend>\n            {actions.map((action) => (\n              <input\n                key={action}\n                type=\"button\"\n                value={action}\n                onClick={onAddAction}\n              />\n            ))}\n          </fieldset>\n        </section>\n        <section>\n          <Grid>\n            <Point\n              {...derivePosition(\n                { x: 5, y: 5 },\n                timeline.slice(0, activeIndex)\n              )}\n            />\n          </Grid>\n        </section>\n      </article>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}